FUNCTION  airline#extensions#branch#head()
Called 18 times
Total time:   0.004412
 Self time:   0.003893

count  total (s)   self (s)
   18              0.000208   if exists('b:airline_head') && !empty(b:airline_head)
                                return b:airline_head
                              endif
                            
   18              0.000088   let b:airline_head = ''
   18              0.000096   let found_fugitive_head = 0
                            
   18              0.000150   if s:has_fugitive && !exists('b:mercurial_dir')
   18   0.000463   0.000256     let b:airline_head = fugitive#head(7)
   18              0.000090     let found_fugitive_head = 1
                            
   18              0.000163     if empty(b:airline_head) && !exists('b:git_dir')
   18   0.000985   0.000673       let b:airline_head = s:get_git_branch(expand("%:p:h"))
   18              0.000045     endif
   18              0.000032   endif
                            
   18              0.000093   if empty(b:airline_head)
   18              0.000065     if s:has_lawrencium
                                  let b:airline_head = lawrencium#statusline()
                                endif
   18              0.000029   endif
                            
   18              0.000075   if empty(b:airline_head)
   18              0.000054     if s:has_vcscommand
                                  call VCSCommandEnableBufferSetup()
                                  if exists('b:VCSCommandBufferInfo')
                                    let b:airline_head = get(b:VCSCommandBufferInfo, 0, '')
                                  endif
                                endif
   18              0.000027   endif
                            
   18              0.000179   if empty(b:airline_head) || !found_fugitive_head && !s:check_in_path()
   18              0.000085     let b:airline_head = ''
   18              0.000034   endif
                            
   18              0.000166   if exists("g:airline#extensions#branch#displayed_head_limit")
                                let w:displayed_head_limit = g:airline#extensions#branch#displayed_head_limit
                                if len(b:airline_head) > w:displayed_head_limit - 1
                                  let b:airline_head = b:airline_head[0:w:displayed_head_limit - 1].'â€¦'
                                endif
                              endif
                            
   18              0.000069   return b:airline_head

FUNCTION  airline#util#append()
Called 27 times
Total time:   0.000844
 Self time:   0.000844

count  total (s)   self (s)
   27              0.000174   if a:minwidth > 0 && winwidth(0) < a:minwidth
                                return ''
                              endif
   27              0.000257   let prefix = s:spc == "\ua0" ? s:spc : s:spc.s:spc
   27              0.000240   return empty(a:text) ? '' : prefix.g:airline_left_alt_sep.s:spc.a:text

FUNCTION  airline#util#wrap()
Called 54 times
Total time:   0.000897
 Self time:   0.000897

count  total (s)   self (s)
   54              0.000354   if a:minwidth > 0 && winwidth(0) < a:minwidth
                                return ''
                              endif
   54              0.000168   return a:text

FUNCTION  airline#parts#filetype()
Called 9 times
Total time:   0.000059
 Self time:   0.000059

count  total (s)   self (s)
    9              0.000045   return &filetype

FUNCTION  airline#highlighter#highlight()
Called 4 times
Total time:   0.069816
 Self time:   0.022249

count  total (s)   self (s)
    4              0.000060   let p = g:airline#themes#{g:airline_theme}#palette
                            
                              " draw the base mode, followed by any overrides
    4              0.000158   let mapped = map(a:modes, 'v:val == a:modes[0] ? v:val : a:modes[0]."_".v:val')
    4              0.000042   let suffix = a:modes[0] == 'inactive' ? '_inactive' : ''
    8              0.000052   for mode in mapped
    4              0.000080     if exists('g:airline#themes#{g:airline_theme}#palette[mode]')
    4              0.000052       let dict = g:airline#themes#{g:airline_theme}#palette[mode]
   59              0.000341       for kvp in items(dict)
   55              0.000429         let mode_colors = kvp[1]
   55   0.007133   0.001117         call airline#highlighter#exec(kvp[0].suffix, mode_colors)
                            
  165              0.001019         for accent in keys(s:accents)
  110              0.000845           if !has_key(p.accents, accent)
                                        continue
                                      endif
  110              0.001120           let colors = copy(mode_colors)
  110              0.000894           if p.accents[accent][0] != ''
   55              0.000508             let colors[0] = p.accents[accent][0]
   55              0.000122           endif
  110              0.000700           if p.accents[accent][2] != ''
   55              0.000461             let colors[2] = p.accents[accent][2]
   55              0.000115           endif
  110              0.000562           if len(colors) >= 5
   56              0.000611             let colors[4] = get(p.accents[accent], 4, '')
   56              0.000126           else
   54              0.000906             call add(colors, get(p.accents[accent], 4, ''))
   54              0.000124           endif
  110   0.014940   0.002438           call airline#highlighter#exec(kvp[0].suffix.'_'.accent, colors)
  110              0.000337         endfor
   55              0.000128       endfor
                            
                                  " TODO: optimize this
   40              0.000205       for sep in items(s:separators)
   36   0.030129   0.001080         call <sid>exec_separator(dict, sep[1][0], sep[1][1], sep[1][2], suffix)
   36              0.000109       endfor
    4              0.000009     endif
    4              0.000009   endfor

FUNCTION  airline#parts#readonly()
Called 9 times
Total time:   0.000084
 Self time:   0.000084

count  total (s)   self (s)
    9              0.000066   return &readonly ? g:airline_symbols.readonly : ''

FUNCTION  airline#parts#paste()
Called 9 times
Total time:   0.000097
 Self time:   0.000097

count  total (s)   self (s)
    9              0.000083   return g:airline_detect_paste && &paste ? g:airline_symbols.paste : ''

FUNCTION  <SNR>54_is_branch_empty()
Called 9 times
Total time:   0.002606
 Self time:   0.000221

count  total (s)   self (s)
    9   0.002592   0.000207   return exists('*airline#extensions#branch#head') && empty(airline#extensions#branch#head())

FUNCTION  airline#highlighter#get_highlight()
Called 72 times
Total time:   0.020461
 Self time:   0.006796

count  total (s)   self (s)
   72   0.006827   0.001052   let fg = s:get_syn(a:group, 'fg')
   72   0.006533   0.001052   let bg = s:get_syn(a:group, 'bg')
   72              0.002982   let reverse = has('gui_running') ? synIDattr(synIDtrans(hlID(a:group)), 'reverse', 'gui') : synIDattr(synIDtrans(hlID(a:group)), 'reverse', 'cterm')|| synIDattr(synIDtrans(hlID(a:group)), 'reverse', 'term')
   72   0.003888   0.001479   return reverse ? s:get_array(bg, fg, a:000) : s:get_array(fg, bg, a:000)

FUNCTION  <SNR>54_get_hunks()
Called 9 times
Total time:   0.003314
 Self time:   0.000518

count  total (s)   self (s)
    9              0.000064   if empty(s:source_func)
                                if get(g:, 'loaded_signify', 0)
                                  let s:source_func = 's:get_hunks_signify'
                                elseif exists('*GitGutterGetHunkSummary')
                                  let s:source_func = 's:get_hunks_gitgutter'
                                elseif exists('*changes#GetStats')
                                  let s:source_func = 's:get_hunks_changes'
                                else
                                  let s:source_func = 's:get_hunks_empty'
                                endif
                              endif
    9   0.002950   0.000154   return {s:source_func}()

FUNCTION  <SNR>55_get_git_branch()
Called 18 times
Total time:   0.000312
 Self time:   0.000312

count  total (s)   self (s)
   18              0.000161   if has_key(s:git_dirs, a:path)
   18              0.000110     return s:git_dirs[a:path]
                              endif
                            
                              let dir = fugitive#extract_git_dir(a:path)
                              if empty(dir)
                                let name = ''
                              else
                                try
                                  let line = join(readfile(dir . '/HEAD'))
                                  if strpart(line, 0, 16) == 'ref: refs/heads/'
                                    let name = strpart(line, 16)
                                  else
                                    " raw commit hash
                                    let name = strpart(line, 0, 7)
                                  endif
                                catch
                                  let name = ''
                                endtry
                              endif
                            
                              let s:git_dirs[a:path] = name
                              return name

FUNCTION  airline#statusline()
Called 9 times
Total time:   0.000523
 Self time:   0.000523

count  total (s)   self (s)
    9              0.000216   if has_key(s:contexts, a:winnr)
    9              0.000213     return '%{airline#check_mode('.a:winnr.')}'.s:contexts[a:winnr].line
                              endif
                            
                              " in rare circumstances this happens...see #276
                              return ''

FUNCTION  fugitive#head()
Called 18 times
Total time:   0.000207
 Self time:   0.000207

count  total (s)   self (s)
   18              0.000114   if !exists('b:git_dir')
   18              0.000049     return ''
                              endif
                            
                              return s:repo().head(a:0 ? a:1 : 0)

FUNCTION  neobundle#config#get_autoload_bundles()
Called 2 times
Total time:   0.000157
 Self time:   0.000157

count  total (s)   self (s)
    2              0.000151   return filter(values(s:neobundles), "!v:val.sourced && v:val.lazy")

FUNCTION  <SNR>57_get_buffer_list()
Called 3 times
Total time:   0.000496
 Self time:   0.000496

count  total (s)   self (s)
    3              0.000022   let buffers = []
    3              0.000023   let cur = bufnr('%')
    6              0.000048   for nr in range(1, bufnr('$'))
    3              0.000026     if buflisted(nr) && bufexists(nr)
    3              0.000016       for ex in s:excludes
                                    if match(bufname(nr), ex)
                                      continue
                                    endif
                                  endfor
    3              0.000026       if getbufvar(nr, 'current_syntax') == 'qf'
                                    continue
                                  endif
    3              0.000058       call add(buffers, nr)
    3              0.000009     endif
    3              0.000008   endfor
                            
    3              0.000025   let s:current_buffer_list = buffers
    3              0.000011   return buffers

FUNCTION  airline#extensions#hunks#get_hunks()
Called 9 times
Total time:   0.003938
 Self time:   0.000624

count  total (s)   self (s)
    9              0.000075   if !get(w:, 'airline_active', 0)
                                return ''
                              endif
    9   0.003449   0.000135   let hunks = s:get_hunks()
    9              0.000034   let string = ''
    9              0.000044   if !empty(hunks)
                                for i in [0, 1, 2]
                                  if s:non_zero_only == 0 || hunks[i] > 0
                                    let string .= printf('%s%s ', s:hunk_symbols[i], hunks[i])
                                  endif
                                endfor
                              endif
    9              0.000030   return string

FUNCTION  <SNR>59_get_array()
Called 72 times
Total time:   0.002409
 Self time:   0.002409

count  total (s)   self (s)
   72              0.000382   let fg = a:fg
   72              0.000294   let bg = a:bg
   72              0.001546   return has('gui_running') ? [ fg, bg, '', '', join(a:opts, ',') ] : [ '', '', fg, bg, join(a:opts, ',') ]

FUNCTION  neobundle#autoload#insert()
Called 2 times
Total time:   0.000305
 Self time:   0.000148

count  total (s)   self (s)
    2   0.000240   0.000083   let bundles = filter(neobundle#config#get_autoload_bundles(), "get(v:val.autoload, 'insert', 0)")
    2              0.000020   if !empty(bundles)
                                call neobundle#config#source_bundles(bundles)
                                doautocmd InsertEnter
                              endif

FUNCTION  airline#highlighter#exec()
Called 205 times
Total time:   0.022740
 Self time:   0.022740

count  total (s)   self (s)
  205              0.001281   let colors = a:colors
  205              0.000772   if s:is_win32term
                                let colors[2] = s:gui2cui(get(colors, 0, ''), get(colors, 2, ''))
                                let colors[3] = s:gui2cui(get(colors, 1, ''), get(colors, 3, ''))
                              endif
  205              0.015627   exec printf('hi %s %s %s %s %s %s %s %s', a:group, get(colors, 0, '') != '' ? 'guifg='.colors[0] : '', get(colors, 1, '') != '' ? 'guibg='.colors[1] : '', get(colors, 2, '') != '' ? 'ctermfg='.colors[2] : '', get(colors, 3, '') != '' ? 'ctermbg='.colors[3] : '', get(colors, 4, '') != '' ? 'gui='.colors[4] : '', get(colors, 4, '') != '' ? 'cterm='.colors[4] : '', get(colors, 4, '') != '' ? 'term='.colors[4] : '')

FUNCTION  <SNR>59_get_syn()
Called 144 times
Total time:   0.011256
 Self time:   0.011256

count  total (s)   self (s)
                              " need to pass in mode, known to break on 7.3.547
  144              0.001722   let mode = has('gui_running') ? 'gui' : 'cterm'
  144              0.003012   let color = synIDattr(synIDtrans(hlID(a:group)), a:what, mode)
  144              0.000999   if empty(color) || color == -1
                                let color = synIDattr(synIDtrans(hlID('Normal')), a:what, mode)
                              endif
  144              0.000777   if empty(color) || color == -1
                                if has('gui_running')
                                  let color = a:what ==# 'fg' ? '#000000' : '#FFFFFF'
                                else
                                  let color = a:what ==# 'fg' ? 0 : 1
                                endif
                              endif
  144              0.000441   return color

FUNCTION  airline#extensions#tabline#default#wrap_name()
Called 3 times
Total time:   0.000163
 Self time:   0.000163

count  total (s)   self (s)
    3              0.000032   let _ = s:buf_nr_show ? printf(s:buf_nr_format, a:bufnr) : ''
    3              0.000054   let _ .= substitute(a:buffer_name, '\\', '/', 'g')
                            
    3              0.000032   if getbufvar(a:bufnr, '&modified') == 1
                                let _ .= s:buf_modified_symbol
                              endif
    3              0.000009   return _

FUNCTION  airline#themes#get_highlight()
Called 72 times
Total time:   0.021870
 Self time:   0.001409

count  total (s)   self (s)
   72   0.021787   0.001326   return call('airline#highlighter#get_highlight', [a:group] + a:000)

FUNCTION  airline#parts#mode()
Called 9 times
Total time:   0.000100
 Self time:   0.000100

count  total (s)   self (s)
    9              0.000083   return get(w:, 'airline_current_mode', '')

FUNCTION  airline#extensions#tabline#get_buffer_name()
Called 3 times
Total time:   0.001236
 Self time:   0.000139

count  total (s)   self (s)
    3   0.001230   0.000133   return airline#extensions#tabline#{s:formatter}#format(a:nr, get(s:, 'current_buffer_list', s:get_buffer_list()))

FUNCTION  <SNR>54_get_hunks_gitgutter()
Called 9 times
Total time:   0.002796
 Self time:   0.000190

count  total (s)   self (s)
    9   0.002753   0.000147   if !get(g:, 'gitgutter_enabled', 0) || s:is_branch_empty()
    9              0.000025     return ''
                              endif
                              return GitGutterGetHunkSummary()

FUNCTION  airline#extensions#branch#get_head()
Called 9 times
Total time:   0.002524
 Self time:   0.000497

count  total (s)   self (s)
    9   0.002140   0.000113   let head = airline#extensions#branch#head()
    9              0.000133   let empty_message = get(g:, 'airline#extensions#branch#empty_message', get(g:, 'airline_branch_empty_message', ''))
    9              0.000100   let symbol = get(g:, 'airline#extensions#branch#symbol', g:airline_symbols.branch)
    9              0.000121   return empty(head) ? empty_message : printf('%s%s', empty(symbol) ? '' : symbol.(g:airline_symbols.space), head)

FUNCTION  airline#extensions#tabline#get()
Called 3 times
Total time:   0.000311
 Self time:   0.000185

count  total (s)   self (s)
    3              0.000050   let curtabcnt = tabpagenr('$')
    3              0.000021   if curtabcnt != s:current_tabcnt
                                let s:current_tabcnt = curtabcnt
                                let s:current_bufnr = -1  " force a refresh...
                              endif
    3              0.000018   if s:show_buffers && curtabcnt == 1
    3   0.000176   0.000050     return s:get_buffers()
                              else
                                return s:get_tabs()
                              endif

FUNCTION  airline#check_mode()
Called 9 times
Total time:   0.073002
 Self time:   0.002113

count  total (s)   self (s)
    9              0.000129   let context = s:contexts[a:winnr]
                            
    9              0.000093   if get(w:, 'airline_active', 1)
    9              0.000083     let l:m = mode()
    9              0.000053     if l:m ==# "i"
    5              0.000036       let l:mode = ['insert']
    5              0.000017     elseif l:m ==# "R"
                                  let l:mode = ['replace']
                                elseif l:m =~# '\v(v|V||s|S|)'
                                  let l:mode = ['visual']
                                else
    4              0.000031       let l:mode = ['normal']
    4              0.000010     endif
    9              0.000124     let w:airline_current_mode = get(g:airline_mode_map, l:m, l:m)
    9              0.000022   else
                                let l:mode = ['inactive']
                                let w:airline_current_mode = get(g:airline_mode_map, '__')
                              endif
                            
    9              0.000086   if g:airline_detect_modified && &modified
                                call add(l:mode, 'modified')
                              endif
                            
    9              0.000047   if g:airline_detect_paste && &paste
                                call add(l:mode, 'paste')
                              endif
                            
    9              0.000046   if &readonly || ! &modifiable
                                call add(l:mode, 'readonly')
                              endif
                            
    9              0.000122   let mode_string = join(l:mode)
    9              0.000093   if get(w:, 'airline_lastmode', '') != mode_string
    4   0.001190   0.000117     call airline#highlighter#highlight_modified_inactive(context.bufnr)
    4   0.069920   0.000104     call airline#highlighter#highlight(l:mode)
    4              0.000032     let w:airline_lastmode = mode_string
    4              0.000007   endif
                            
    9              0.000023   return ''

FUNCTION  <SNR>59_exec_separator()
Called 36 times
Total time:   0.029049
 Self time:   0.003584

count  total (s)   self (s)
   36   0.011845   0.000610   let l:from = airline#themes#get_highlight(a:from.a:suffix)
   36   0.011223   0.000588   let l:to = airline#themes#get_highlight(a:to.a:suffix)
   36              0.000366   let group = a:from.'_to_'.a:to.a:suffix
   36              0.000118   if a:inverse
   12              0.000155     let colors = [ l:from[1], l:to[1], l:from[3], l:to[3] ]
   12              0.000026   else
   24              0.000328     let colors = [ l:to[1], l:from[1], l:to[3], l:from[3] ]
   24              0.000054   endif
   36              0.000291   let a:dict[group] = colors
   36   0.004162   0.000567   call airline#highlighter#exec(group, colors)

FUNCTION  airline#highlighter#highlight_modified_inactive()
Called 4 times
Total time:   0.001073
 Self time:   0.000446

count  total (s)   self (s)
    4              0.000049   if getbufvar(a:bufnr, '&modified')
                                let colors = exists('g:airline#themes#{g:airline_theme}#palette.inactive_modified.airline_c') ? g:airline#themes#{g:airline_theme}#palette.inactive_modified.airline_c : []
                              else
    4              0.000129     let colors = exists('g:airline#themes#{g:airline_theme}#palette.inactive.airline_c') ? g:airline#themes#{g:airline_theme}#palette.inactive.airline_c : []
    4              0.000010   endif
                            
    4              0.000027   if !empty(colors)
    4   0.000752   0.000125     call airline#highlighter#exec('airline_c'.(a:bufnr).'_inactive', colors)
    4              0.000011   endif

FUNCTION  airline#extensions#whitespace#check()
Called 9 times
Total time:   0.001053
 Self time:   0.001053

count  total (s)   self (s)
    9              0.000127   if &readonly || !&modifiable || !s:enabled || line('$') > s:max_lines
                                return ''
                              endif
                            
    9              0.000076   if !exists('b:airline_whitespace_check')
                                let b:airline_whitespace_check = ''
                                let checks = get(g:, 'airline#extensions#whitespace#checks', s:default_checks)
                            
                                let trailing = 0
                                if index(checks, 'trailing') > -1
                                  let trailing = search('\s$', 'nw')
                                endif
                            
                                let mixed = 0
                                if index(checks, 'indent') > -1
                                  let mixed = s:check_mixed_indent()
                                endif
                            
                                if trailing != 0 || mixed != 0
                                  let b:airline_whitespace_check = s:symbol
                                  if s:show_message
                                    if trailing != 0
                                      let b:airline_whitespace_check .= (g:airline_symbols.space).printf(s:trailing_format, trailing)
                                    endif
                                    if mixed != 0
                                      let b:airline_whitespace_check .= (g:airline_symbols.space).printf(s:mixed_indent_format, mixed)
                                    endif
                                  endif
                                endif
                              endif
    9              0.000043   return b:airline_whitespace_check

FUNCTION  <SNR>57_get_buffers()
Called 3 times
Total time:   0.000126
 Self time:   0.000126

count  total (s)   self (s)
    3              0.000031   let cur = bufnr('%')
    3              0.000015   if cur == s:current_bufnr
    3              0.000047     if !g:airline_detect_modified || getbufvar(cur, '&modified') == s:current_modified
    3              0.000020       return s:current_tabline
                                endif
                              endif
                            
                              let l:index = 1
                              let b = s:new_builder()
                              let tab_bufs = tabpagebuflist(tabpagenr())
                              for nr in s:get_visible_buffers()
                                if nr < 0
                                  call b.add_raw('%#airline_tabhid#...')
                                  continue
                                endif
                            
                                if cur == nr
                                  if g:airline_detect_modified && getbufvar(nr, '&modified')
                                    let group = 'airline_tabmod'
                                  else
                                    let group = 'airline_tabsel'
                                  endif
                                  let s:current_modified = (group == 'airline_tabmod') ? 1 : 0
                                else
                                  if g:airline_detect_modified && getbufvar(nr, '&modified')
                                    let group = 'airline_tabmod_unsel'
                                  elseif index(tab_bufs, nr) > -1
                                    let group = 'airline_tab'
                                  else
                                    let group = 'airline_tabhid'
                                  endif
                                endif
                            
                                if s:buffer_idx_mode
                                  if len(s:number_map) > 0
                                    call b.add_section(group, s:spc . get(s:number_map, l:index, '') . '%(%{airline#extensions#tabline#get_buffer_name('.nr.')}%)' . s:spc)
                                  else
                                    call b.add_section(group, '['.l:index.s:spc.'%(%{airline#extensions#tabline#get_buffer_name('.nr.')}%)'.']')
                                  endif
                                  let l:index = l:index + 1
                                else
                                  call b.add_section(group, s:spc.'%(%{airline#extensions#tabline#get_buffer_name('.nr.')}%)'.s:spc)
                                endif
                              endfor
                            
                              call b.add_section('airline_tabfill', '')
                              call b.split()
                              call b.add_section('airline_tabfill', '')
                              call b.add_section('airline_tabtype', ' buffers ')
                            
                              let s:current_bufnr = cur
                              let s:current_tabline = b.build()
                              return s:current_tabline

FUNCTION  airline#parts#iminsert()
Called 9 times
Total time:   0.000169
 Self time:   0.000169

count  total (s)   self (s)
    9              0.000069   if g:airline_detect_iminsert && &iminsert && exists('b:keymap_name')
                                return toupper(b:keymap_name)
                              endif
    9              0.000021   return ''

FUNCTION  airline#extensions#tabline#default#format()
Called 3 times
Total time:   0.000601
 Self time:   0.000438

count  total (s)   self (s)
    3              0.000016   let _ = ''
                            
    3              0.000027   let name = bufname(a:bufnr)
    3              0.000018   if empty(name)
                                let _ .= '[No Name]'
                              else
    3              0.000013     if s:fnamecollapse
    3              0.000203       let _ .= substitute(fnamemodify(name, s:fmod), '\v\w\zs.{-}\ze(\\|/)', '', 'g')
    3              0.000010     else
                                  let _ .= fnamemodify(name, s:fmod)
                                endif
    3              0.000020   endif
                            
    3   0.000230   0.000067   return airline#extensions#tabline#default#wrap_name(a:bufnr, _)

FUNCTIONS SORTED ON TOTAL TIME
count  total (s)   self (s)  function
    9   0.073002   0.002113  airline#check_mode()
    4   0.069816   0.022249  airline#highlighter#highlight()
   36   0.029049   0.003584  <SNR>59_exec_separator()
  205   0.022740             airline#highlighter#exec()
   72   0.021870   0.001409  airline#themes#get_highlight()
   72   0.020461   0.006796  airline#highlighter#get_highlight()
  144   0.011256             <SNR>59_get_syn()
   18   0.004412   0.003893  airline#extensions#branch#head()
    9   0.003938   0.000624  airline#extensions#hunks#get_hunks()
    9   0.003314   0.000518  <SNR>54_get_hunks()
    9   0.002796   0.000190  <SNR>54_get_hunks_gitgutter()
    9   0.002606   0.000221  <SNR>54_is_branch_empty()
    9   0.002524   0.000497  airline#extensions#branch#get_head()
   72   0.002409             <SNR>59_get_array()
    3   0.001236   0.000139  airline#extensions#tabline#get_buffer_name()
    4   0.001073   0.000446  airline#highlighter#highlight_modified_inactive()
    9   0.001053             airline#extensions#whitespace#check()
   54   0.000897             airline#util#wrap()
   27   0.000844             airline#util#append()
    3   0.000601   0.000438  airline#extensions#tabline#default#format()

FUNCTIONS SORTED ON SELF TIME
count  total (s)   self (s)  function
  205              0.022740  airline#highlighter#exec()
    4   0.069816   0.022249  airline#highlighter#highlight()
  144              0.011256  <SNR>59_get_syn()
   72   0.020461   0.006796  airline#highlighter#get_highlight()
   18   0.004412   0.003893  airline#extensions#branch#head()
   36   0.029049   0.003584  <SNR>59_exec_separator()
   72              0.002409  <SNR>59_get_array()
    9   0.073002   0.002113  airline#check_mode()
   72   0.021870   0.001409  airline#themes#get_highlight()
    9              0.001053  airline#extensions#whitespace#check()
   54              0.000897  airline#util#wrap()
   27              0.000844  airline#util#append()
    9   0.003938   0.000624  airline#extensions#hunks#get_hunks()
    9              0.000523  airline#statusline()
    9   0.003314   0.000518  <SNR>54_get_hunks()
    9   0.002524   0.000497  airline#extensions#branch#get_head()
    3              0.000496  <SNR>57_get_buffer_list()
    4   0.001073   0.000446  airline#highlighter#highlight_modified_inactive()
    3   0.000601   0.000438  airline#extensions#tabline#default#format()
   18              0.000312  <SNR>55_get_git_branch()

